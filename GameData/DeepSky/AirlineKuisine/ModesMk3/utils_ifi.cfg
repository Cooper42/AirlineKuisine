//Cabin
@PART[dsak_cabin3]:NEEDS[IFILS]
{
	@entryCost *= 1.05
	@cost *= 1.6
	@mass *= 0.85
	@tags = cck-lifsupport mk3 lifesupport life supp cabin
	@description = Like the Mk2 Rec Centre, we did away with the cramped airliner model and repurposed the standard cabin to serve more effectively as a hotel in space. // We've built a bigger concept space kitchen into this one, with novel facilities which require a masterful scientist in order to operate at top performance and feed a small group at once.
	@tags = cck-lifesupport life support cabin mk3
	@category = Utility
	-MODEL {}
	MODEL
	{
		model = Squad/Parts/FuelTank/mk3Fuselage/CREW
		texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3_core_ifi
		texture = Mk3Fuselage_LUM, DeepSky/AirlineKuisine/TexturesMk3/Mk3Fuselage_LUM
	}
}

//Processor A: Greenhouse
@PART[dsak_proc_3a]:NEEDS[IFILS]
{
	@entryCost *= 1.2
	@cost *= 1.8
	@mass *= 1.4
	@title = Mk3 Inline Greenhouse
	@description = Someone at Deep Sky had the crazy idea to put Big Ben to work at something other than telling time. He was promptly stared down by everyone else and made to sit in a corner. But after some time to reflect, it was deemed a very cool suggestion. Somehow the design scaled incredibly well and this machine boasts the ability to churn out snacks at 5x the capacity of its Mk2 size relative.
	@category = Utility
	@tags = cck-lifesupport mk3 snack grinder
	@MODEL
	{
		@texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3proc_a_ifi
	}
	
	MODULE
	{
		name = ModuleRequiredExperiment
		requiredExperimentID = PlantRespirationStudy
		//biomes = one,two,three
		//requiredSitMask = 63
		inCurrentSituation = true
		uniqueBodies = false

		modulesInitiallyDisabled = ModuleResourceConverter
	}
	
	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = Greenhouse
		requiresAllInputs = true
		isAlwaysActive = false
		StartActionName = Turn UV Lights ON
		StopActionName = Turn UV Lights OFF
		AutoShutdown = true
		//statusGUIName = UV Lights

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 10
		}
		INPUT_RESOURCE
		{
			ResourceName = OrganicSlurry
			Ratio = 0.00011575
		}
		// The two output resources need to add up
		// to the input resource here
		OUTPUT_RESOURCE
		{
			ResourceName = LifeSupport
			Ratio = 0.000104175
			DumpExcess = true
		} 
		OUTPUT_RESOURCE
		{
			ResourceName = Sludge
			Ratio = 0.000011575
			DumpExcess = true
		} 
	}
	
	RESOURCE
	{
		name = Sludge
		amount = 0
		maxAmount = 25
	}
	RESOURCE
	{
		name = OrganicSlurry
		amount = 0
		maxAmount = 25
	}
	RESOURCE
	{
		name = LifeSupport
		amount = 0
		maxAmount = 25
	}
	MODULE
	{
		name = IFI_Improved
	}
}

//Processor B: BioReactor
@PART[dsak_proc_3b]:NEEDS[IFILS]
{
	@entryCost *= 1.1
	@cost *= 1.4
	@mass *= 1.15
	@title = Mk3 Inline BioReactor
	@description = The BioReactor is a pretty hefty and rather demanding piece of machinery. It was no easy task, neither on our minds nor our hands, to design and construct a thing that enriches and purifies an extreme waste product to produce more life sustaining goodness, and at 2.5x nominal capacity. Maybe Kerbalkind is heading towards one of those scary, Japanese Dystopian futures...
	@category = Utility
	@tags = cck-lifesupport mk3
	@MODEL
	{
		@texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3proc_b_ifi
	}
	MODULE
	{
		name = ModuleRequiredExperiment
		requiredExperimentID = BioContainment
		//biomes = one,two,three
		//requiredSitMask = 63
		inCurrentSituation = true
		uniqueBodies = false

		modulesInitiallyDisabled = AnimatedGenerator
	}
	

	MODULE
	{
		name = AnimatedGenerator
		tag = bioReactorOne
		ConverterName = BioReactor
		// AnimationName = exhaustPort
		FillAmount = 0.95
		AlwaysActive = false
		StartActionName = Start Sludge Processing
		StopActionName = Stop Sludge Processing
		AutoShutdown = true
		GeneratesHeat = true
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		SpecialistBonusBase = 0.05
		Specialty = Engineer
		EfficiencyBonus = 1
			
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 25
		}
		INPUT_RESOURCE
		{
			ResourceName = Sludge
			Ratio = 0.000034725
		}
		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.00011575
		}
		INPUT_RESOURCE
		{
			ResourceName = CompressedOxygen
			Ratio = 0.0025
		}	
		OUTPUT_RESOURCE
		{
			ResourceName = LifeSupport
			Ratio = 0.00006945
			DumpExcess = true
		}
	}
	
	RESOURCE
	{
		name = ElectricCharge
		amount = 25
		maxAmount = 25
	}
	RESOURCE
	{
		name = Sludge
		amount = 0
		maxAmount = 25
	}
	RESOURCE
	{
		name = LifeSupport
		amount = 0
		maxAmount = 25
	}
	MODULE
	{
		name = IFI_Extreme
	}
}

//Processor C: MicroBiome
@PART[dsak_proc_3c]:NEEDS[IFILS]
{
	@entryCost *= 1.2
	@cost *= 1.55
	@mass *= 1.5
	@title = Mk3 Inline MicroBiome Facility
	@description = Deep Sky has been waiting for a long time for an excuse to produce something that does more with the Mystery Goo™ than serve as a lab animal cage. Unlike a certain manufacturer of spaceplane parts, we are in harmony with our Goo™. Rather than make engines with it, we feed it, and it feeds us.
	@category = Utility
	@tags = cck-lifesupport mk3
	@MODEL
	{
		@texture = Mk3Fuselage, DeepSky/AirlineKuisine/TexturesMk3/mk3proc_c_ifi
	}
	MODULE
	{
		name = ModuleRequiredExperiment
		requiredExperimentID = BioSystems
		//requiredSitMask = 63
		inCurrentSituation = true
		uniqueBodies = false

		modulesInitiallyDisabled = AnimatedGenerator
	}

    MODULE
    {
        name = ModuleResourceConverter
        tag = WaterValve//for moduleManager
        ConverterName = Sludge Valve
        StartActionName = Start Sludge Valve
        StopActionName = Stop Sludge Valve
        AutoShutdown = false
        FillAmount = 1.0
        AlwaysActive = false
        GeneratesHeat = false
        UseSpecialistBonus = true
        SpecialistEfficiencyFactor = 0.2
        SpecialistBonusBase = 0.05
        Specialty = Engineer
        EfficiencyBonus = 1
 			
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 16
		}
	
		INPUT_RESOURCE
		{
			ResourceName = Sludge
			Ratio = 0.000022224
		}
	
		OUTPUT_RESOURCE
		{
			ResourceName = LifeSupport
			Ratio = 0.000022224
			DumpExcess = true
		}
    }	
	
	RESOURCE
	{
		name = ElectricCharge
		amount = 25
		maxAmount = 25
	}
	RESOURCE
	{
		name = Sludge
		amount = 0
		maxAmount = 25
	}
	RESOURCE
	{
		name = LifeSupport
		amount = 0
		maxAmount = 25
	}
	MODULE
	{
		name = IFI_Advanced
	}
}