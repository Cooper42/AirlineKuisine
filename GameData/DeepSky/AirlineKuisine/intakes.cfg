@PART[ds00_intmk2|ds00_intrbm]:NEEDS[TacLifeSupport]
{
	@tags = cck-lifesupport
	MODULE
	{
		name = TacGenericConverter
		ConverterName = Air Filter
		StartActionName = Start AirFilter
		StopActionName = Stop AirFilter	
		tag = Life Support
		requiresOxygenAtmo = true
		GeneratesHeat = false
		conversionRate = 60
		
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 1
		}
		INPUT_RESOURCE
		{
			ResourceName = IntakeAir
			Ratio = 0.1
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Oxygen
			Ratio = 0.063829787234043
			DumpExcess = false
		}

		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.5
		SpecialistBonusBase = 1
		ExperienceEffect = ConverterSkill
		EfficiencyBonus = 1	
	}
}

@PART[ds00_int|ds00_intrbm]:NEEDS[IFILS]
{
	@tags = cck-lifesupport
	MODULE
	{
		name = ModuleRequiredExperiment
		requiredExperimentID = BioContainment
		//biomes = one,two,three
		//requiredSitMask = 63
		inCurrentSituation = true
		uniqueBodies = false

		modulesInitiallyDisabled = AnimatedGenerator
	}
	
	MODULE
	{
	        name = ModuleResourceConverter
	        tag = CircularIntake //for moduleManager
	        ConverterName = IFI Atmosphere Intake
	        StartActionName = Start Sludge Valve
	        StopActionName = Stop Sludge Valve
	        AutoShutdown = false
	        FillAmount = 1.0
	        AlwaysActive = false
	        GeneratesHeat = false
	        UseSpecialistBonus = true
	        SpecialistEfficiencyFactor = 0.2
	        SpecialistBonusBase = 0.05
	        Specialty = Engineer
	        EfficiencyBonus = 1
 			
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 20
		}
		INPUT_RESOURCE
		{
			ResourceName = IntakeAtm
			Ratio = 2
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FilteredOxygen
			Ratio = 2
			DumpExcess = true
		}
		moduleIsEnabled = false
		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = dsak_IFIOxy
				description__ = CompressedOxygen
				techRequired__ = astroBiology
				moduleIsEnabled = true
			}
		}
	}
	
	MODULE
	{
		name = ModuleResourceConverter
		ResourceName = CompressedOxygen
		ConverterName = IFI Oxygen Compressor
		StartActionName = Open Oxygen Compressor
		StopActionName = Close Oxygen Compressor
		AutoShutdown = false
		AlwaysActive = false
        GeneratesHeat = false

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 20
		}
		INPUT_RESOURCE
		{
			ResourceName = FilteredOxygen
			Ratio = 2
		}
		OUTPUT_RESOURCE
		{
			ResourceName = CompressedOxygen
			Ratio = 0.002
			DumpExcess = true
		}
		moduleIsEnabled = false
		showUpgradesInModuleInfo = true
		UPGRADES
		{
			UPGRADE
			{
				name__ = dsak_IFIOxy
				description__ = CompressedOxygen
				techRequired__ = astroBiology
				moduleIsEnabled = true
			}
		}
	}
}

PARTUPGRADE:NEEDS[IFILS]
{
	name = dsak_IFIOxy
	partIcon = ds00_kPad
	techRequired = astroBiology
	entryCost = 12000
	cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
	title = DS-IFI Oxygenation System
	basicInfo = In-flight Oxygen generation.
	manufacturer = Deep Sky
	description = Installs standard-process ISRU components into select intake parts. Enables harvesting and compressing of important resources from foreign atmospheres.
}

@PART[ds00_intmk2|ds00_intrbm]:NEEDS[Kerbalism,ProfileDefault]
{
	@tags = _kerbalism
	@category = none
	
	MODULE
	{
		name = Harvester
		title = CO2 Filter
		type = 2
		resource = CarbonDioxide
		min_abundance = 0.005
		min_pressure = 4.0
		rate = 0.8
		ec_rate = 2.0
	}
	
	MODULE
	{
		name = Harvester
		title = Oxygen Filter
		type = 2
		resource = Oxygen
		min_abundance = 0.02
		min_pressure = 5.0
		rate = 1.0
		ec_rate = 2.0
	}
	
	MODULE
	{
		name = Harvester
		title = Nitrogen Filter
		type = 2
		resource = Nitrogen
		min_abundance = 0.01
		min_pressure = 2.0
		rate = 1.4
		ec_rate = 2.0
	}
	
	MODULE
	{
		name = Harvester
		title = Ammonia Filter
		type = 2
		resource = Ammonia
		min_abundance = 0.005
		min_pressure = 4.0
		rate = 0.8
		ec_rate = 2.0
	}
	
	MODULE
	{
		name = Harvester
		title = Water Filter
		type = 1
		resource = Water
		min_abundance = 0.005
		min_pressure = 4.0
		rate = 0.8
		ec_rate = 2.0
	}

	MODULE
	{
		name = Configure
		title = Atmospheric Filter
		slots = 1

		SETUP
		{
			name = Carbon Dioxide Filter
			desc = Extract <b>CO2</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = CarbonDioxide
			}
		}

		SETUP
		{
			name = Oxygen Filter
			desc = Extract <b>O2</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Oxygen
			}
		}

		SETUP
		{
			name = Nitrogen Filter
			desc = Extract <b>N2</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Nitrogen
			}
		}

		SETUP
		{
			name = Ammonia Filter
			desc = Extract <b>NH3</b> from the atmosphere.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Ammonia
			}
		}
	}
	
	MODULE
	{
		name = Configure
		title = Oceanic Filter
		slots = 1
		
		SETUP
		{
			name = Water Filter
			desc = Extract <b>H20</b> from the lake or sea.

			MODULE
			{
				type = Harvester
				id_field = resource
				id_value = Water
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Harvester
		title = Harvester
		repair = Engineer
		mtbf = 72576000 // 8y
		extra_cost = 1.0
		extra_mass = 0.5
	}
}